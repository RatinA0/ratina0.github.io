---
import type { VPProjectDetails } from '~/types';
import TimeBadge from './TimeBadge.astro';
import DownloadButton from './DownloadButton.astro';

export interface Props {
  projectDetails: VPProjectDetails;
  classes?: string;
  boxClasses?: string;
}

const { projectDetails: projectDetails, classes, boxClasses } = Astro.props;
---

<section class={`relative ${classes}`}>
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    <div
      class={`max-w-3xl mx-auto text-center p-4 rounded-md shadow-xl ${boxClasses} dark:shadow-none dark:border dark:border-slate-600`}
    >
      <div class="flex justify-center items-center gap-4 pb-4">
        <h6 style="margin-bottom: 0" class="text-2xl">
          Release: {projectDetails.releaseText}
        </h6>
        <span class="dark:text-slate-400">
          <TimeBadge date={projectDetails.releaseDate} />
        </span>
      </div>

      {
        // Automatic install
        projectDetails.hasPrimary() && (
          <div class="pb-4 flex flex-nowrap flex-col sm:flex-row gap-4 justify-center">
            <DownloadButton
              text={projectDetails?.singlePrimaryText ?? 'Download this version'}
              href={projectDetails?.singlePrimary()}
              primary={true}
              tooltip={projectDetails?.tooltipSingle}
            />
          </div>
        )
      }

      {
        // Manual install
        projectDetails.hasSecondary() && (
          <>
            <h4 style="margin-top: 0">Download for Manual install</h4>
            <div class="flex flex-nowrap flex-col sm:flex-row gap-4 justify-center">
              {projectDetails?.hasManualVP13 && (
                <DownloadButton
                  text="for VEGAS Pro 13 and earlier"
                  href={projectDetails.manualVP13()}
                  tooltip={projectDetails?.tooltipVP13}
                />
              )}
              {projectDetails?.hasManualVP14 && (
                <DownloadButton
                  text="for VEGAS Pro 14 and later"
                  href={projectDetails.manualVP14()}
                  tooltip={projectDetails?.tooltipVP14}
                />
              )}
              {projectDetails?.hasManualSingle && (
                <DownloadButton
                  text={projectDetails?.singleSecondaryText ?? 'Download this version'}
                  href={projectDetails.singleSecondary()}
                  tooltip={projectDetails?.tooltipSingle}
                />
              )}
            </div>
          </>
        )
      }

      {
        // Changes
        projectDetails?.changes && projectDetails.changes.length > 0 && (
          <details open class="text-start px-2 pt-4">
            <summary>Changes</summary>
            <ul style="margin: 0">
              {projectDetails.changes.map((change: string) => (
                <li set:html={change} />
              ))}
            </ul>
          </details>
        )
      }
    </div>
  </div>
</section>
